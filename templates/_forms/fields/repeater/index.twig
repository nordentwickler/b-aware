{{ hiddenInput(field.getHtmlName(), '') }}

{% fieldtag 'nestedFieldContainer' %}
    {% if value  %}
        {% for block in value.all() %}
            {{ formieInclude('fields/repeater/_row', {
                id: block.id ?? 'new' ~ loop.index,
            }) }}
        {% endfor %}
    {% elseif field.minRows > 0 %}
        {% for i in 1..field.minRows %}
            {{ formieInclude('fields/repeater/_row', {
                id: 'new' ~ i,
            }) }}
        {% endfor %}
    {% endif %}
{% endfieldtag %}

{{ fieldtag('fieldAddButton') }}

{% set includeScriptsInline = renderOptions.includeScriptsInline ?? false %}

{% if includeScriptsInline %}
    {# For GraphQL requests we need to render this inline #}
    <script type="text/x-template" data-repeater-template="{{ field.handle }}">
        {{ formieInclude('fields/repeater/_row', {
            id: '__ROW__',
        }) }}
    </script>
{% else %}
    {# Have to use the `script` tag here to place the script outside of a Vue3 wrapper #}
    {# as Vue3 will strip out inline `script` tags (all other scenarios would be fine) #}
    {% script with { type: 'text/x-template', 'data-repeater-template': field.handle } %}
        {{ formieInclude('fields/repeater/_row', {
            id: '__ROW__',
        }) }}
    {% endscript %}
{% endif %}